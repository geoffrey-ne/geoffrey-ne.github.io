(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{376:function(t,s,a){"use strict";a.r(s);var e=a(45),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),a("h2",{attrs:{id:"_1-进程与线程区别-为什么-js-会设计成单线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程与线程区别-为什么-js-会设计成单线程"}},[t._v("#")]),t._v(" 1. 进程与线程区别，为什么 js 会设计成单线程")]),t._v(" "),a("p",[t._v("进程是操作系统分配资源的最小单元，创建进程会创建上下文，分配内存空间等等；多个进程之间资源是隔离的；而线程是操作系统调度的最小单位，线程是实际运作单位，线程之间资源是共享的，也是互相影响的。")]),t._v(" "),a("p",[t._v("打开浏览器的一个 tab 就会新建一个进程(除 IE)，由于进程之间的隔离性，会更安全，一个 tab 挂了不会影响另一个，不过开销也更大。")]),t._v(" "),a("p",[t._v("浏览器内核是多线程的，如 js 引擎线程、定时器触发线程、GUI 渲染线程等。")]),t._v(" "),a("p",[t._v("js 会设计成单线程，是因为 js 起初是用来处理页面用户交互、操作 dom 树等任务而设计的。如果 js 是多线程，可能会发生同时操作同一 dom 而造成 UI 冲突问题。")])])}),[],!1,null,null,null);s.default=r.exports}}]);